{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{getBaseOs,getFreeDiskStorage,getMaxMemory,getPowerState,getTotalDiskCapacity,getTotalMemory,getUsedMemory,getUserAgent,isAirplaneMode,isBatteryChargingSync,isCameraPresent,isEmulator,getVersion,isLandscapeSync,getBuildNumber,getApplicationName,isLocationEnabled}from'react-native-device-info';import{DataTable,Surface,Title}from'react-native-paper';var styles=StyleSheet.create({surface:{margin:20,maxWidth:800},title:{padding:30,textAlign:'center'}});var useAllSpecs=function useAllSpecs(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),freeDisk=_useState2[0],setFreeDisk=_useState2[1],_useState3=useState(null),_useState4=_slicedToArray(_useState3,2),powerState=_useState4[0],setPowerState=_useState4[1],_useState5=useState(null),_useState6=_slicedToArray(_useState5,2),totalMemory=_useState6[0],setTotalMemory=_useState6[1],_useState7=useState(null),_useState8=_slicedToArray(_useState7,2),usedMemory=_useState8[0],setUsedMemory=_useState8[1],_useState9=useState(null),_useState10=_slicedToArray(_useState9,2),baseOs=_useState10[0],setBaseOs=_useState10[1],_useState11=useState(null),_useState12=_slicedToArray(_useState11,2),totalDisk=_useState12[0],setTotalDisk=_useState12[1],_useState13=useState(null),_useState14=_slicedToArray(_useState13,2),locationEnabled=_useState14[0],setIsLocationEnabled=_useState14[1],_useState15=useState(null),_useState16=_slicedToArray(_useState15,2),cameraPresent=_useState16[0],setIsCameraPresent=_useState16[1],_useState17=useState(null),_useState18=_slicedToArray(_useState17,2),maxMemory=_useState18[0],setMaxMemory=_useState18[1],_useState19=useState(null),_useState20=_slicedToArray(_useState19,2),airplaneMode=_useState20[0],setAirplaneMode=_useState20[1],_useState21=useState(null),_useState22=_slicedToArray(_useState21,2),userAgent=_useState22[0],setUserAgent=_useState22[1];useEffect(function(){getFreeDiskStorage().then(setFreeDisk);getPowerState().then(setPowerState);getTotalMemory().then(setTotalMemory);getUsedMemory().then(setUsedMemory);getBaseOs().then(setBaseOs);getTotalDiskCapacity().then(setTotalDisk);getUserAgent().then(setUserAgent);isCameraPresent().then(setIsCameraPresent);isLocationEnabled().then(setIsLocationEnabled);getMaxMemory().then(setMaxMemory);isAirplaneMode().then(setAirplaneMode);},[]);return{freeDisk:freeDisk,powerState:powerState,totalMemory:totalMemory,usedMemory:usedMemory,baseOs:baseOs,totalDisk:totalDisk,userAgent:userAgent,cameraPresent:cameraPresent,locationEnabled:locationEnabled,maxMemory:maxMemory,airplaneMode:airplaneMode};};var BooleanRow=function BooleanRow(_ref){var description=_ref.description,value=_ref.value;return React.createElement(DataTable.Row,null,React.createElement(DataTable.Cell,null,description),React.createElement(DataTable.Cell,null,value?'✅':'⛔️'));};var StringRow=function StringRow(_ref2){var description=_ref2.description,value=_ref2.value;return React.createElement(DataTable.Row,null,React.createElement(DataTable.Cell,null,description),React.createElement(DataTable.Cell,null,value));};var Formatter=new Intl.NumberFormat();export default function App(){var _useAllSpecs=useAllSpecs(),freeDisk=_useAllSpecs.freeDisk,powerState=_useAllSpecs.powerState,baseOs=_useAllSpecs.baseOs,cameraPresent=_useAllSpecs.cameraPresent,locationEnabled=_useAllSpecs.locationEnabled,totalDisk=_useAllSpecs.totalDisk,usedMemory=_useAllSpecs.usedMemory,totalMemory=_useAllSpecs.totalMemory,userAgent=_useAllSpecs.userAgent,maxMemory=_useAllSpecs.maxMemory,airplaneMode=_useAllSpecs.airplaneMode;return React.createElement(React.Fragment,null,React.createElement(Title,{style:styles.title},\"react-native-device-info\"),React.createElement(Surface,{style:styles.surface},React.createElement(DataTable,null,React.createElement(DataTable.Header,null,React.createElement(DataTable.Title,null,\"Function\"),React.createElement(DataTable.Title,null,\"Output\")),React.createElement(StringRow,{description:\"getApplicationName\",value:getApplicationName()}),React.createElement(StringRow,{description:\"getVersion\",value:getVersion()}),React.createElement(StringRow,{description:\"getBuildNumber\",value:getBuildNumber()}),React.createElement(BooleanRow,{description:\"isCameraPresent\",value:cameraPresent}),React.createElement(BooleanRow,{description:\"isLocationEnabled\",value:locationEnabled}),React.createElement(BooleanRow,{description:\"isLandscape\",value:isLandscapeSync()}),React.createElement(BooleanRow,{description:\"isEmulator\",value:isEmulator()}),React.createElement(BooleanRow,{description:\"isAirplaneMode\",value:airplaneMode}),React.createElement(StringRow,{description:\"getUsedMemory / getMaxMemory\",value:Formatter.format(usedMemory)+' / '+Formatter.format(maxMemory)}),React.createElement(StringRow,{description:\"getTotalMemory\",value:Formatter.format(totalMemory)}),React.createElement(StringRow,{description:\"getFreeDiskStorage / getTotalDiskCapacity\",value:Formatter.format(freeDisk)+' / '+Formatter.format(totalDisk)}),React.createElement(StringRow,{description:\"getUserAgent\",value:userAgent}),React.createElement(StringRow,{description:\"getBaseOs\",value:baseOs}),React.createElement(StringRow,{description:\"getPowerState().batteryLevel || getBatteryLevel\",value:powerState&&powerState.batteryLevel?Math.round(1000*powerState.batteryLevel)/10+'%':''}),React.createElement(BooleanRow,{description:\"getPowerState().charging || isBatteryCharging\",value:isBatteryChargingSync()}),React.createElement(StringRow,{description:\"getPowerState().batteryState\",value:powerState&&powerState.batteryState}),React.createElement(BooleanRow,{description:\"getPowerState().lowPowerMode\",value:powerState&&powerState.lowPowerMode}),React.createElement(StringRow,{description:\"getPowerState().chargingTime\",value:powerState&&powerState.chargingTime}),React.createElement(StringRow,{description:\"getPowerState().dischargingTime\",value:powerState&&powerState.dischargingTime}))));}","map":{"version":3,"sources":["/Users/robertherber/code/react-native-device-info/example-web/App.tsx"],"names":["React","useEffect","useState","getBaseOs","getFreeDiskStorage","getMaxMemory","getPowerState","getTotalDiskCapacity","getTotalMemory","getUsedMemory","getUserAgent","isAirplaneMode","isBatteryChargingSync","isCameraPresent","isEmulator","getVersion","isLandscapeSync","getBuildNumber","getApplicationName","isLocationEnabled","DataTable","Surface","Title","styles","StyleSheet","create","surface","margin","maxWidth","title","padding","textAlign","useAllSpecs","freeDisk","setFreeDisk","powerState","setPowerState","totalMemory","setTotalMemory","usedMemory","setUsedMemory","baseOs","setBaseOs","totalDisk","setTotalDisk","locationEnabled","setIsLocationEnabled","cameraPresent","setIsCameraPresent","maxMemory","setMaxMemory","airplaneMode","setAirplaneMode","userAgent","setUserAgent","then","BooleanRow","description","value","StringRow","Formatter","Intl","NumberFormat","App","format","batteryLevel","Math","round","batteryState","lowPowerMode","chargingTime","dischargingTime"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  getBaseOs,\n  getFreeDiskStorage,\n  getMaxMemory,\n  getPowerState,\n  getTotalDiskCapacity,\n  getTotalMemory,\n  getUsedMemory,\n  getUserAgent,\n  isAirplaneMode,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isEmulator,\n  getVersion,\n  isLandscapeSync,\n  getBuildNumber,\n  getApplicationName,\n  isLocationEnabled,\n} from 'react-native-device-info';\nimport { DataTable, Surface, Title } from 'react-native-paper';\n\nconst styles = StyleSheet.create({\n  surface: { margin: 20, maxWidth: 800 },\n  title: { padding: 30, textAlign: 'center' },\n});\n\nconst useAllSpecs = () => {\n  const [freeDisk, setFreeDisk] = useState(null),\n    [powerState, setPowerState] = useState(null),\n    [totalMemory, setTotalMemory] = useState(null),\n    [usedMemory, setUsedMemory] = useState(null),\n    [baseOs, setBaseOs] = useState(null),\n    [totalDisk, setTotalDisk] = useState(null),\n    [locationEnabled, setIsLocationEnabled] = useState(null),\n    [cameraPresent, setIsCameraPresent] = useState(null),\n    [maxMemory, setMaxMemory] = useState(null),\n    [airplaneMode, setAirplaneMode] = useState(null),\n    [userAgent, setUserAgent] = useState(null);\n\n  useEffect(() => {\n    getFreeDiskStorage().then(setFreeDisk);\n    getPowerState().then(setPowerState);\n    getTotalMemory().then(setTotalMemory);\n    getUsedMemory().then(setUsedMemory);\n    getBaseOs().then(setBaseOs);\n    getTotalDiskCapacity().then(setTotalDisk);\n    getUserAgent().then(setUserAgent);\n    isCameraPresent().then(setIsCameraPresent);\n    isLocationEnabled().then(setIsLocationEnabled);\n    getMaxMemory().then(setMaxMemory);\n    isAirplaneMode().then(setAirplaneMode);\n  }, []);\n\n  return {\n    freeDisk,\n    powerState,\n    totalMemory,\n    usedMemory,\n    baseOs,\n    totalDisk,\n    userAgent,\n    cameraPresent,\n    locationEnabled,\n    maxMemory,\n    airplaneMode,\n  };\n};\n\nconst BooleanRow = ({ description, value }: { description: string; value: boolean }) => (\n  <DataTable.Row>\n    <DataTable.Cell>{description}</DataTable.Cell>\n    <DataTable.Cell>{value ? '✅' : '⛔️'}</DataTable.Cell>\n  </DataTable.Row>\n);\n\nconst StringRow = ({ description, value }: { description: string; value: string }) => (\n  <DataTable.Row>\n    <DataTable.Cell>{description}</DataTable.Cell>\n    <DataTable.Cell>{value}</DataTable.Cell>\n  </DataTable.Row>\n);\n\nconst Formatter = new Intl.NumberFormat();\n\nexport default function App() {\n  const {\n    freeDisk,\n    powerState,\n    baseOs,\n    cameraPresent,\n    locationEnabled,\n    totalDisk,\n    usedMemory,\n    totalMemory,\n    userAgent,\n    maxMemory,\n    airplaneMode,\n  } = useAllSpecs();\n\n  return (\n    <>\n      <Title style={styles.title}>react-native-device-info</Title>\n      <Surface style={styles.surface}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Function</DataTable.Title>\n            <DataTable.Title>Output</DataTable.Title>\n          </DataTable.Header>\n          <StringRow description=\"getApplicationName\" value={getApplicationName()} />\n          <StringRow description=\"getVersion\" value={getVersion()} />\n          <StringRow description=\"getBuildNumber\" value={getBuildNumber()} />\n          <BooleanRow description=\"isCameraPresent\" value={cameraPresent} />\n          <BooleanRow description=\"isLocationEnabled\" value={locationEnabled} />\n          <BooleanRow description=\"isLandscape\" value={isLandscapeSync()} />\n          <BooleanRow description=\"isEmulator\" value={isEmulator()} />\n\n          <BooleanRow description=\"isAirplaneMode\" value={airplaneMode} />\n          <StringRow\n            description=\"getUsedMemory / getMaxMemory\"\n            value={Formatter.format(usedMemory) + ' / ' + Formatter.format(maxMemory)}\n          />\n          <StringRow description=\"getTotalMemory\" value={Formatter.format(totalMemory)} />\n          <StringRow\n            description=\"getFreeDiskStorage / getTotalDiskCapacity\"\n            value={Formatter.format(freeDisk) + ' / ' + Formatter.format(totalDisk)}\n          />\n          <StringRow description=\"getUserAgent\" value={userAgent} />\n          <StringRow description=\"getBaseOs\" value={baseOs} />\n          <StringRow\n            description=\"getPowerState().batteryLevel || getBatteryLevel\"\n            value={\n              powerState && powerState.batteryLevel\n                ? Math.round(1000 * powerState.batteryLevel) / 10 + '%'\n                : ''\n            }\n          />\n          <BooleanRow\n            description=\"getPowerState().charging || isBatteryCharging\"\n            value={isBatteryChargingSync()}\n          />\n          <StringRow\n            description=\"getPowerState().batteryState\"\n            value={powerState && powerState.batteryState}\n          />\n          <BooleanRow\n            description=\"getPowerState().lowPowerMode\"\n            value={powerState && powerState.lowPowerMode}\n          />\n          <StringRow\n            description=\"getPowerState().chargingTime\"\n            value={powerState && powerState.chargingTime}\n          />\n          <StringRow\n            description=\"getPowerState().dischargingTime\"\n            value={powerState && powerState.dischargingTime}\n          />\n        </DataTable>\n      </Surface>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}