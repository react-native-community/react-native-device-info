{"ast":null,"code":"'use strict';var printWarning=function printWarning(){};if((process&&process.env&&process.env.NODE_ENV||\"production\")!=='production'){var ReactPropTypesSecret=require(\"./lib/ReactPropTypesSecret\");var loggedTypeFailures={};var has=Function.call.bind(Object.prototype.hasOwnProperty);printWarning=function printWarning(text){var message='Warning: '+text;if(typeof console!=='undefined'){console.error(message);}try{throw new Error(message);}catch(x){}};}function checkPropTypes(typeSpecs,values,location,componentName,getStack){if((process&&process.env&&process.env.NODE_ENV||\"production\")!=='production'){for(var typeSpecName in typeSpecs){if(has(typeSpecs,typeSpecName)){var error;try{if(typeof typeSpecs[typeSpecName]!=='function'){var err=Error((componentName||'React class')+': '+location+' type `'+typeSpecName+'` is invalid; '+'it must be a function, usually from the `prop-types` package, but received `'+typeof typeSpecs[typeSpecName]+'`.');err.name='Invariant Violation';throw err;}error=typeSpecs[typeSpecName](values,typeSpecName,componentName,location,null,ReactPropTypesSecret);}catch(ex){error=ex;}if(error&&!(error instanceof Error)){printWarning((componentName||'React class')+': type specification of '+location+' `'+typeSpecName+'` is invalid; the type checker '+'function must return `null` or an `Error` but returned a '+typeof error+'. '+'You may have forgotten to pass an argument to the type checker '+'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and '+'shape all require an argument).');}if(error instanceof Error&&!(error.message in loggedTypeFailures)){loggedTypeFailures[error.message]=true;var stack=getStack?getStack():'';printWarning('Failed '+location+' type: '+error.message+(stack!=null?stack:''));}}}}}checkPropTypes.resetWarningCache=function(){if((process&&process.env&&process.env.NODE_ENV||\"production\")!=='production'){loggedTypeFailures={};}};module.exports=checkPropTypes;","map":{"version":3,"sources":["/Users/robertherber/code/react-native-device-info/example-web/node_modules/react-native-device-info/node_modules/prop-types/checkPropTypes.js"],"names":["printWarning","ReactPropTypesSecret","require","loggedTypeFailures","has","Function","call","bind","Object","prototype","hasOwnProperty","text","message","console","error","Error","x","checkPropTypes","typeSpecs","values","location","componentName","getStack","typeSpecName","err","name","ex","stack","resetWarningCache","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n"]},"metadata":{},"sourceType":"script"}